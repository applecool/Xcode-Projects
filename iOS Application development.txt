iOS Application development:

App --> AppDelegate.h and .m
	--> ViewController.h and .m
	--> Main.storyboard


UX in mobile applications:

We are not making websites! Less is so much more. Think about gestures and not clicks. Think about the size of the device (iPhone or iPad)

Differences from websites:

Mobile applications  					Websites

Little content						Lots of content
Can rotate							cannot rotate
Gesture interaction					Click interation
No onscreen help					on screen help
Has preferences						Has no preferences
Has a standard UI					Has multiple UI's

Organic Design:

Design something that is organic to other OSX applications
Users require reliability in design
Most apps have consistent design paradigms
Xcode has features that are meant to be used in a specific way

Metaphors and design:

Real world concepts and ideas can be likened to images, app functions, gestures and more
Learn to find the similarities between the real world and the app world
Find an organic solution to a problem within the confines of a mobile platform.

Users and Control:

The best apps give the most control to the user
Lower your scope of your project to give the most control to the user
Remember what you want to see in an app

The Mobile Experience:

Function
Tasks to perform
Time
Results

Minimalism:

Same experience but less objects
Less is more
Simple is better

Designing Apps:

Start with a list of features
Make sure these features can be done
Explore ideas on how to present these features
Take out all of the unnecessary features

Designing for your users:

Different people use apps differently
Find out as much as you can about your users
What kind of interactions do your users like?
Make sure the users feels that the app experience is organic

Constantly edit your features:

Features are not set in stone in the early stages
Test your features out with some users
Take away features, add features and tweak features

Taking content from a website:

Focus your message to small bits of information
Focus on small but satisfying functionality
Design a mobile application not a web application
Use the built in gestures to navigate
There is no homepage only a loading screen -- Logo,Instructions in the loading screen

Standard UI Versus re-design:

Innovative and inventive designs can be hard to understand
If the design is organic and friendly it will work
If it is too difficult then it will not work
Simplicity is the best answer

Productivity versus design:

Does your app serve an aesthetic purpose or a functional purpose
Dont strain the users brain
If the app is a tool, then it needs to be productive
Consistency within you app is also key

Custom UI's:

Always test new ideas
Test early and test often
Listen to the feedback
Be prepared to abandon your idea
If you abandon your idea perhaps you can relaunch it somewhere else other than a mobile platform
When you make mistakes you learn

Three phases of Development:

Prototype and testing -- mockups and idea
Production and testing -- coding and functionalities
Quality assurance, testing and release
(notice how testing is in each phase)

Protyping phase:

Do all of the design work here
Nothing is set in stone
You can revise unlimited amount of times
Once you are finished designing all decisions are frozen before you move to the next phase
Test your ideas often
Make multiple designs
Save all your designs[bad or good]
Your last design, might not be the best
Once you have completed this phase it can take a lot of time to go back and change things

Planning for development:

A good design should be easy to develop and self explanatory
Plan out all of the possible tasks in development
The more planning you do here the better the rest of the project will go
Itemized lists are best

Development:

This is where the coding is done to make your app work and be functional
Development should not be planned here but in the prototyping phase
If planned correctly, development should go smoothly
Planning for development is an in demand skill
Do the development yourself or get somebody else to do it
DYI is not always 100% DYI it can be 80% DYI[Do yourself]
Planning and very specific notes are a great way to save money
Learning to do things yourself is another way to save money

Development Conundrum:

The earlier you put your project into QA the better the product will be but the more money it ill cost and the greater likelihood of the app will never get released.
The later you put your project into QA, the less money it will cost to produce, the greater likelihood it will get released, but the quality will not be as good.
Quality versus money and time to launch.

Quality phase:

This is polishing phase
90% of the details are in the last 10% of production
Remember you must ship
The better planned the first two stages are the smoother this process will go

Once you are ready, release!:

You have to ship
It is good to set your own deadlines and adhere to them
Decide if you want to release often or little
Celebrate your release









